{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport { useState, useEffect } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialState = {\n  login: '',\n  email: '',\n  password: ''\n};\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyboardShown = _useState2[0],\n      setKeyboardShown = _useState2[1];\n\n  var _useState3 = useState(initialState),\n      _useState4 = _slicedToArray(_useState3, 2),\n      state = _useState4[0],\n      setState = _useState4[1];\n\n  var _useState5 = useState({\n    login: false,\n    email: false,\n    password: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      active = _useState6[0],\n      setActive = _useState6[1];\n\n  var _useState7 = useState(Dimensions.get('window').width - 20 * 2),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dimensions = _useState8[0],\n      setDimensions = _useState8[1];\n\n  useEffect(function () {\n    var onChange = function onChange() {\n      var width = Dimensions.get('window').width - 20 * 2;\n      console.log(width);\n      setDimensions(width);\n    };\n\n    Dimensions.addEventListener('change', onChange);\n    return function () {\n      Dimensions.removeEventListener('change', onChange);\n    };\n  }, []);\n\n  var hideKeyboard = function hideKeyboard() {\n    setKeyboardShown(false);\n    Keyboard.dismiss();\n  };\n\n  var submitForm = function submitForm() {\n    Keyboard.dismiss();\n    console.log(state);\n    setState(initialState);\n  };\n\n  var handleLoginFocus = function handleLoginFocus() {\n    setActive(function () {\n      return {\n        login: true\n      };\n    });\n    setKeyboardShown(true);\n  };\n\n  var handleEmailFocus = function handleEmailFocus() {\n    setActive(function () {\n      return {\n        email: true\n      };\n    });\n    setKeyboardShown(true);\n  };\n\n  var handlePasswordFocus = function handlePasswordFocus() {\n    setActive(function () {\n      return {\n        password: true\n      };\n    });\n    setKeyboardShown(true);\n  };\n\n  var handleInputBlur = function handleInputBlur() {\n    return setActive({\n      login: false,\n      email: false,\n      password: false\n    });\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: hideKeyboard,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(ImageBackground, {\n        source: require(\"../../assets/images/background.png\"),\n        style: styles.image,\n        children: _jsx(KeyboardAvoidingView, {\n          behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n          children: _jsxs(View, {\n            style: _objectSpread(_objectSpread({}, styles.formContainer), {}, {\n              marginBottom: keyboardShown ? 50 : 0\n            }),\n            children: [_jsxs(View, {\n              children: [_jsx(View, {\n                style: styles.imageAdd,\n                children: _jsx(View, {\n                  style: styles.plusSign,\n                  children: _jsx(Image, {\n                    source: require(\"../../assets/images/Union.png\")\n                  })\n                })\n              }), _jsx(Text, {\n                style: styles.text,\n                children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n              }), _jsx(TextInput, {\n                placeholder: 'Логин',\n                style: _objectSpread(_objectSpread({}, styles.input), {}, {\n                  borderColor: active.login ? '#FF6C00' : '#E8E8E8',\n                  width: dimensions\n                }),\n                onFocus: handleLoginFocus,\n                onBlur: handleInputBlur,\n                value: state.login,\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      login: value\n                    });\n                  });\n                }\n              }), _jsx(TextInput, {\n                placeholder: 'Адрес электронной почты',\n                style: _objectSpread(_objectSpread({}, styles.input), {}, {\n                  borderColor: active.email ? '#FF6C00' : '#E8E8E8',\n                  width: dimensions\n                }),\n                onFocus: handleEmailFocus,\n                onBlur: handleInputBlur,\n                value: state.email,\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      email: value\n                    });\n                  });\n                }\n              }), _jsx(TextInput, {\n                placeholder: 'Пароль',\n                secureTextEntry: true,\n                style: _objectSpread(_objectSpread({}, styles.input), {}, {\n                  borderColor: active.password ? '#FF6C00' : '#E8E8E8',\n                  width: dimensions\n                }),\n                onFocus: handlePasswordFocus,\n                onBlur: handleInputBlur,\n                value: state.password,\n                onChangeText: function onChangeText(value) {\n                  return setState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      password: value\n                    });\n                  });\n                }\n              })]\n            }), _jsx(TouchableOpacity, {\n              activeOpacity: 0.7,\n              style: _objectSpread(_objectSpread({}, styles.button), {}, {\n                width: dimensions\n              }),\n              onPress: submitForm,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: styles.login,\n              onPress: function onPress() {\n                return navigation.navigate('Login');\n              },\n              children: _jsx(Text, {\n                style: styles.loginText,\n                children: \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \\u0412\\u043E\\u0439\\u0442\\u0438\"\n              })\n            })]\n          })\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    resizeMode: 'cover'\n  },\n  formContainer: {\n    backgroundColor: '#fff',\n    borderTopRightRadius: 25,\n    borderTopLeftRadius: 25,\n    alignItems: 'center'\n  },\n  imageAdd: {\n    width: 120,\n    height: 120,\n    position: 'relative',\n    backgroundColor: '#F6F6F6',\n    marginTop: -60,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    borderRadius: 16\n  },\n  plusSign: {\n    position: 'absolute',\n    right: -12,\n    bottom: 14,\n    width: 25,\n    height: 25,\n    borderColor: '#FF6C00',\n    backgroundColor: '#ffffff',\n    borderWidth: 1,\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    fontSize: 30,\n    marginTop: 32,\n    marginBottom: 33\n  },\n  input: {\n    borderWidth: 1,\n    backgroundColor: '#F6F6F6',\n    marginBottom: 16,\n    borderRadius: 8,\n    height: 50,\n    color: '#212121',\n    padding: 16,\n    placeholderTextColor: '#BDBDBD'\n  },\n  button: {\n    borderWidth: 1,\n    marginTop: 27,\n    borderRadius: 100,\n    backgroundColor: '#FF6C00',\n    borderColor: 'transparent',\n    alignItems: 'center',\n    padding: 16\n  },\n  buttonText: {\n    color: '#ffffff',\n    fontSize: 16\n  },\n  login: {\n    alignItems: 'center',\n    marginTop: 16,\n    marginBottom: 66\n  },\n  loginText: {\n    color: '#1B4371',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["StatusBar","useState","useEffect","initialState","login","email","password","RegisterScreen","navigation","keyboardShown","setKeyboardShown","state","setState","active","setActive","Dimensions","get","width","dimensions","setDimensions","onChange","console","log","addEventListener","removeEventListener","hideKeyboard","Keyboard","dismiss","submitForm","handleLoginFocus","handleEmailFocus","handlePasswordFocus","handleInputBlur","styles","container","require","image","Platform","OS","formContainer","marginBottom","imageAdd","plusSign","text","input","borderColor","value","prevState","button","buttonText","navigate","loginText","StyleSheet","create","flex","justifyContent","resizeMode","backgroundColor","borderTopRightRadius","borderTopLeftRadius","alignItems","height","position","marginTop","marginLeft","marginRight","borderRadius","right","bottom","borderWidth","textAlign","fontSize","color","padding","placeholderTextColor"],"sources":["D:/Projects/react-native-hw/screens/auth/RegisterScreen.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useState, useEffect } from 'react';\r\nimport { Dimensions, Image, Keyboard, TouchableWithoutFeedback, KeyboardAvoidingView, TouchableOpacity, Button, ImageBackground, StyleSheet, Text, TextInput, View, Platform } from 'react-native';\r\n\r\nconst initialState = {\r\n  login: '',\r\n  email: '', \r\n  password: ''\r\n}\r\n\r\n\r\nexport default function RegisterScreen({navigation}) {\r\n//   console.log(navigation);\r\n  const [keyboardShown, setKeyboardShown] = useState(false);\r\n  const [state, setState] = useState(initialState);\r\n  const [active, setActive] = useState({\r\n    login: false,\r\n    email: false,\r\n    password: false\r\n  });\r\n  const [dimensions, setDimensions] = useState(Dimensions.get('window').width - 20 * 2);\r\n\r\n  useEffect(() => {\r\n    const onChange = () => {\r\n      const width = Dimensions.get('window').width- 20 * 2;\r\n      console.log(width);\r\n      setDimensions(width);\r\n    }\r\n    Dimensions.addEventListener('change', onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener('change', onChange)\r\n    }\r\n  }, [])\r\n  \r\n  const hideKeyboard = () => {\r\n    setKeyboardShown(false)\r\n    Keyboard.dismiss()\r\n  }\r\n\r\n  const submitForm = () => {\r\n    Keyboard.dismiss()\r\n    console.log(state)\r\n    setState(initialState)\r\n  }\r\n  //  const [loginActive, setLoginActive] = useState(false)\r\n\r\n  const handleLoginFocus = () => {\r\n    setActive(() => ({ login: true }))\r\n    setKeyboardShown(true)\r\n  }\r\n  const handleEmailFocus = () => {\r\n    setActive(() => ({ email: true }))\r\n    setKeyboardShown(true)\r\n  }\r\n  const handlePasswordFocus = () => {\r\n    setActive(() => ({ password: true }))\r\n    setKeyboardShown(true)\r\n  }\r\n  const handleInputBlur = () => setActive({\r\n    login: false,\r\n    email: false, \r\n    password: false})\r\n  \r\n  \r\n  return (\r\n    <TouchableWithoutFeedback onPress={hideKeyboard}>\r\n    <View style={styles.container}>\r\n     \r\n      <ImageBackground\r\n        source={require('../../assets/images/background.png')}\r\n        // resizeMode='cover'\r\n        style={styles.image}>\r\n\r\n        <KeyboardAvoidingView\r\n                behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n              > \r\n          <View style={{\r\n            ...styles.formContainer,\r\n            marginBottom: keyboardShown ? 50 : 0,\r\n          }}>\r\n            <View>\r\n                <View style={styles.imageAdd}>\r\n                                  <View style={styles.plusSign}>\r\n                                      <Image source={require('../../assets/images/Union.png')} />\r\n                                  </View>        \r\n                </View>\r\n            <Text style={styles.text}>Регистрация</Text>\r\n            <TextInput\r\n                placeholder={'Логин'}\r\n                style={\r\n                  // styles.input\r\n                   ({ ...styles.input, borderColor: active.login ?'#FF6C00' : '#E8E8E8', width: dimensions })\r\n                }\r\n                onFocus={handleLoginFocus}\r\n                onBlur={handleInputBlur}\r\n                value={state.login}\r\n                onChangeText={(value) =>\r\n                  setState((prevState) => ({ ...prevState, login: value }))}\r\n            />\r\n            <TextInput\r\n              placeholder={'Адрес электронной почты'}\r\n                style={\r\n                   ({ ...styles.input, borderColor: active.email ? '#FF6C00' : '#E8E8E8', width: dimensions })\r\n                }\r\n                onFocus={handleEmailFocus}\r\n                onBlur={handleInputBlur}\r\n                value={state.email}\r\n                onChangeText={(value) =>\r\n                  setState((prevState) => ({ ...prevState, email: value }))}\r\n            />\r\n            <TextInput\r\n              placeholder={'Пароль'}\r\n              secureTextEntry={true}\r\n                style={\r\n                  ({ ...styles.input, borderColor:  active.password ? '#FF6C00' : '#E8E8E8', width: dimensions })\r\n                }\r\n                onFocus={handlePasswordFocus}\r\n                onBlur={handleInputBlur}\r\n                value={state.password}\r\n                onChangeText={(value) =>\r\n                  setState((prevState) => ({ ...prevState, password: value }))}\r\n                /> \r\n             \r\n            </View>\r\n            <TouchableOpacity\r\n              activeOpacity={0.7}\r\n                style={{...styles.button, width: dimensions}}\r\n              onPress={submitForm}>\r\n                \r\n              <Text style={styles.buttonText}>Зарегистрироваться</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                style={styles.login}\r\n                onPress={() => navigation.navigate('Login')}\r\n            >\r\n              <Text style={styles.loginText}>Уже есть аккаунт? Войти</Text>\r\n            </TouchableOpacity>\r\n          \r\n          \r\n          </View>\r\n            </KeyboardAvoidingView> \r\n    </ImageBackground>\r\n   \r\n    </View>\r\n    </TouchableWithoutFeedback> \r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        justifyContent: 'flex-end',\r\n        resizeMode: 'cover',\r\n    },\r\n    formContainer: {\r\n        backgroundColor: '#fff',\r\n        borderTopRightRadius: 25, \r\n        borderTopLeftRadius: 25,\r\n        alignItems: 'center',\r\n        // padding: 16,\r\n    },\r\n    imageAdd: {\r\n        width: 120,\r\n        height: 120,\r\n        position: 'relative',\r\n        backgroundColor: '#F6F6F6',\r\n        marginTop: -60,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        borderRadius: 16,\r\n    },\r\n    plusSign: {\r\n        position: 'absolute',\r\n        right: -12,\r\n        bottom: 14,\r\n        width: 25,\r\n        height: 25,\r\n        borderColor: '#FF6C00',\r\n        backgroundColor: '#ffffff',\r\n        borderWidth: 1,\r\n        borderRadius: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n  text: {\r\n    textAlign: 'center',\r\n    fontSize: 30,\r\n    // fontStyle: 'bold',\r\n    marginTop: 32,\r\n      marginBottom: 33,\r\n  },\r\n  // inputsGroup: {\r\n  //   marginBottom: 32,\r\n  // },\r\n  input: {\r\n    borderWidth: 1,\r\n    backgroundColor: '#F6F6F6',\r\n    // borderColor: '#E8E8E8',\r\n    marginBottom: 16,\r\n    borderRadius: 8,\r\n    height: 50,\r\n    color: '#212121',\r\n    padding: 16,\r\n    placeholderTextColor: '#BDBDBD',\r\n  },\r\n  button: {\r\n    borderWidth: 1,\r\n    marginTop: 27,\r\n    borderRadius: 100,\r\n    backgroundColor: '#FF6C00',\r\n    borderColor: 'transparent',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    // cursor: 'pointer',\r\n  },\r\n  buttonText: {\r\n    color: '#ffffff',\r\n    fontSize: 16,\r\n  },\r\n  login: {\r\n    alignItems: 'center',\r\n    marginTop: 16,\r\n    marginBottom: 66,\r\n    // cursor: 'pointer',\r\n  },\r\n  loginText: {\r\n    color: '#1B4371',\r\n    fontSize: 16,\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}